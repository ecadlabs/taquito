import { CONFIGS } from './config';
import { ligoSample } from './data/ligo-simple-contract';
import { PvmKind } from '@taquito/rpc';

CONFIGS().forEach(({ lib, rpc, setup }) => {
  const Tezos = lib;

  describe(`Test contract.batch with smart rollup originate using: ${rpc}`, () => {
    beforeEach(async (done) => {
      await setup(true);
      done();
    });

    it('should be able to batch smart rollup originate with other operations', async (done) => {
      const kernel = '23212f7573722f62696e2f656e762073680a6578706f7274204b45524e454c3da'

      const batch = Tezos.contract
        .batch()
        .withSmartRollupOriginate({
          pvmKind: PvmKind.WASM2,
          kernel,
          parametersType: { prim: 'bytes' },
        })
        .withOrigination({
          balance: '1',
          code: ligoSample,
          storage: 0
        });
      const op = await batch.send();
      await op.confirmation();

      expect(op.status).toEqual('applied');
      expect(op.includedInBlock).toBeDefined();

      done();
    });
  });
});
