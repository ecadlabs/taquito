// Michelson code from https://ide-staging.ligolang.org/p/SHUGuQ2nTVpinYoQ0uW2_Q
export const idInitData = `(Pair (Pair { Elt 1
                  (Pair (Pair "tz1gjaF81ZRRvdzjobyfVNsAeSC6PScjfQwN" "tz1KqTpEZ7Yob7QbPE4Hy4Wo8fHG8LhKxZSx")
                        0x0501000000026869) }
            10000000)
      (Pair 2 333))`

export const idMichelsonCode = `{ parameter
    (or (or (pair %buy (option %initial_controller address) (bytes %profile)) (unit %skip))
        (or (pair %update_details
               (pair (int %id) (option %new_controller address))
               (option %new_profile bytes))
            (pair %update_owner (int %id) (address %new_owner)))) ;
  storage
    (pair (pair (big_map %identities
                   int
                   (pair (pair (address %controller) (address %owner)) (bytes %profile)))
                (mutez %name_price))
          (pair (int %next_id) (mutez %skip_price))) ;
  code { DUP ;
         CDR ;
         DIG 1 ;
         DUP ;
         DUG 2 ;
         CAR ;
         IF_LEFT
           { DUP ;
             IF_LEFT
               { DIG 2 ;
                 DUP ;
                 DUG 3 ;
                 DIG 1 ;
                 DUP ;
                 DUG 2 ;
                 PAIR ;
                 DUP ;
                 CAR ;
                 DIG 1 ;
                 DUP ;
                 DUG 2 ;
                 CDR ;
                 DUP ;
                 CAR ;
                 CDR ;
                 AMOUNT ;
                 COMPARE ;
                 EQ ;
                 IF { PUSH unit Unit } { PUSH string "Incorrect amount paid." ; FAILWITH } ;
                 DIG 1 ;
                 DUP ;
                 DUG 2 ;
                 CDR ;
                 CAR ;
                 DIG 3 ;
                 DUP ;
                 DUG 4 ;
                 CAR ;
                 IF_NONE { SENDER } { DUP ; DIP { DROP } } ;
                 DIG 4 ;
                 DUP ;
                 DUG 5 ;
                 CDR ;
                 SENDER ;
                 DIG 2 ;
                 DUP ;
                 DUG 3 ;
                 PAIR ;
                 PAIR ;
                 DIG 4 ;
                 DUP ;
                 DUG 5 ;
                 CDR ;
                 CDR ;
                 PUSH int 1 ;
                 DIG 4 ;
                 DUP ;
                 DUG 5 ;
                 ADD ;
                 PAIR ;
                 DIG 5 ;
                 DUP ;
                 DUG 6 ;
                 CAR ;
                 CDR ;
                 DIG 6 ;
                 DUP ;
                 DUG 7 ;
                 CAR ;
                 CAR ;
                 DIG 3 ;
                 DUP ;
                 DUG 4 ;
                 DIG 6 ;
                 DUP ;
                 DUG 7 ;
                 SWAP ;
                 SOME ;
                 SWAP ;
                 UPDATE ;
                 PAIR ;
                 PAIR ;
                 NIL operation ;
                 PAIR ;
                 DIP { DROP 8 } }
               { DIG 2 ;
                 DUP ;
                 DUG 3 ;
                 CDR ;
                 CDR ;
                 AMOUNT ;
                 COMPARE ;
                 EQ ;
                 IF { PUSH unit Unit } { PUSH string "Incorrect amount paid." ; FAILWITH } ;
                 DIG 3 ;
                 DUP ;
                 DUG 4 ;
                 CDR ;
                 CDR ;
                 PUSH int 1 ;
                 DIG 5 ;
                 DUP ;
                 DUG 6 ;
                 CDR ;
                 CAR ;
                 ADD ;
                 PAIR ;
                 DIG 4 ;
                 DUP ;
                 DUG 5 ;
                 CAR ;
                 CDR ;
                 DIG 5 ;
                 DUP ;
                 DUG 6 ;
                 CAR ;
                 CAR ;
                 PAIR ;
                 PAIR ;
                 NIL operation ;
                 PAIR ;
                 DIP { DROP 2 } } ;
             DIP { DROP } }
           { DUP ;
             IF_LEFT
               { DIG 2 ;
                 DUP ;
                 DUG 3 ;
                 DIG 1 ;
                 DUP ;
                 DUG 2 ;
                 PAIR ;
                 DUP ;
                 CAR ;
                 DIG 1 ;
                 DUP ;
                 DUG 2 ;
                 CDR ;
                 PUSH mutez 0 ;
                 AMOUNT ;
                 COMPARE ;
                 NEQ ;
                 IF { PUSH string "Updating details doesn't cost anything." ; FAILWITH }
                    { PUSH unit Unit } ;
                 DIG 2 ;
                 DUP ;
                 DUG 3 ;
                 CAR ;
                 CAR ;
                 DIG 2 ;
                 DUP ;
                 DUG 3 ;
                 CAR ;
                 CAR ;
                 DUP ;
                 DIG 2 ;
                 DUP ;
                 DUG 3 ;
                 GET ;
                 IF_NONE
                   { PUSH string "This ID does not exist." ; FAILWITH }
                   { DUP ; DIP { DROP } } ;
                 PUSH bool False ;
                 DIG 1 ;
                 DUP ;
                 DUG 2 ;
                 CAR ;
                 CDR ;
                 SENDER ;
                 COMPARE ;
                 EQ ;
                 DIG 2 ;
                 DUP ;
                 DUG 3 ;
                 CAR ;
                 CAR ;
                 SENDER ;
                 COMPARE ;
                 EQ ;
                 OR ;
                 IF { PUSH bool True }
                    { PUSH string "You are not the owner or controller of this ID." ; FAILWITH } ;
                 DIG 6 ;
                 DUP ;
                 DUG 7 ;
                 CDR ;
                 CDR ;
                 DIG 7 ;
                 DUP ;
                 DUG 8 ;
                 CDR ;
                 CAR ;
                 PAIR ;
                 DIG 7 ;
                 DUP ;
                 DUG 8 ;
                 CAR ;
                 CDR ;
                 DIG 5 ;
                 DUP ;
                 DUG 6 ;
                 DIG 5 ;
                 DUP ;
                 DUG 6 ;
                 DIG 6 ;
                 DUP ;
                 DUG 7 ;
                 CAR ;
                 CDR ;
                 DIP { DUP ; CDR ; SWAP ; CAR ; CAR } ;
                 SWAP ;
                 PAIR ;
                 PAIR ;
                 DIG 11 ;
                 DUP ;
                 DUG 12 ;
                 CAR ;
                 CDR ;
                 IF_NONE { DIG 6 ; DUP ; DUG 7 ; CAR ; CAR } { DUP ; DIP { DROP } } ;
                 DIP { DUP ; CDR ; SWAP ; CAR ; CDR } ;
                 PAIR ;
                 PAIR ;
                 DIG 11 ;
                 DUP ;
                 DUG 12 ;
                 CDR ;
                 IF_NONE { DIG 6 ; DUP ; DUG 7 ; CDR } { DUP ; DIP { DROP } } ;
                 SWAP ;
                 CAR ;
                 PAIR ;
                 DIG 8 ;
                 DUP ;
                 DUG 9 ;
                 SWAP ;
                 SOME ;
                 SWAP ;
                 UPDATE ;
                 PAIR ;
                 PAIR ;
                 NIL operation ;
                 PAIR ;
                 DIP { DROP 10 } }
               { DIG 2 ;
                 DUP ;
                 DUG 3 ;
                 DIG 1 ;
                 DUP ;
                 DUG 2 ;
                 PAIR ;
                 DUP ;
                 CAR ;
                 DIG 1 ;
                 DUP ;
                 DUG 2 ;
                 CDR ;
                 PUSH mutez 0 ;
                 AMOUNT ;
                 COMPARE ;
                 NEQ ;
                 IF { PUSH string "Updating owner doesn't cost anything." ; FAILWITH }
                    { PUSH unit Unit } ;
                 DIG 2 ;
                 DUP ;
                 DUG 3 ;
                 CAR ;
                 DIG 2 ;
                 DUP ;
                 DUG 3 ;
                 CAR ;
                 CAR ;
                 DUP ;
                 DIG 2 ;
                 DUP ;
                 DUG 3 ;
                 GET ;
                 IF_NONE
                   { PUSH string "This ID does not exist." ; FAILWITH }
                   { DUP ; DIP { DROP } } ;
                 PUSH bool False ;
                 DIG 1 ;
                 DUP ;
                 DUG 2 ;
                 CAR ;
                 CDR ;
                 SENDER ;
                 COMPARE ;
                 EQ ;
                 IF { PUSH bool True }
                    { PUSH string "You are not the owner of this ID." ; FAILWITH } ;
                 DIG 6 ;
                 DUP ;
                 DUG 7 ;
                 CDR ;
                 CDR ;
                 DIG 7 ;
                 DUP ;
                 DUG 8 ;
                 CDR ;
                 CAR ;
                 PAIR ;
                 DIG 7 ;
                 DUP ;
                 DUG 8 ;
                 CAR ;
                 CDR ;
                 DIG 5 ;
                 DUP ;
                 DUG 6 ;
                 DIG 5 ;
                 DUP ;
                 DUG 6 ;
                 DIG 11 ;
                 DUP ;
                 DUG 12 ;
                 CDR ;
                 DIP { DUP ; CDR ; SWAP ; CAR ; CAR } ;
                 SWAP ;
                 PAIR ;
                 PAIR ;
                 DIG 8 ;
                 DUP ;
                 DUG 9 ;
                 SWAP ;
                 SOME ;
                 SWAP ;
                 UPDATE ;
                 PAIR ;
                 PAIR ;
                 NIL operation ;
                 PAIR ;
                 DIP { DROP 10 } } ;
             DIP { DROP } } ;
	DIP { DROP 2 } } }`;
