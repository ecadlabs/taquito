# Enhanced CI workflow for Taquito with security checks
# This enhances the existing main.yml workflow
# Place this at: .github/workflows/main.yml (REPLACE existing)

name: Node.js CI with Security

on:
  pull_request:
  push:
    branches:
      - master

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}-${{ github.ref != 'refs/heads/master' || github.run_number }}
  cancel-in-progress: ${{ startsWith(github.ref, 'refs/pull/') }}

jobs:
  lint-and-test:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        node:
          - 'lts/Hydrogen'  # Node 18
          - 'lts/Iron'      # Node 20
          - 'lts/Jod'       # Node 22
    steps:
      - uses: actions/checkout@v4
      
      - uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node }}
          cache: 'npm'
      
      - name: Install dependencies
        run: npm ci
      
      # NEW: Audit dependencies for vulnerabilities
      - name: Audit dependencies
        run: npm audit --audit-level=moderate
        continue-on-error: true  # Don't fail build, just warn
      
      # NEW: Check for outdated dependencies
      - name: Check for outdated packages
        run: npm outdated || true
      
      - name: Build
        run: npm run build
      
      - name: Lint
        run: npm run lint
      
      - name: Build docs
        run: npm run build-docs
      
      - name: Test
        run: npm run test -- --runInBand
      
      - name: Upload coverage
        uses: codecov/codecov-action@v3.1.1
        with:
          file: .coverage/*.json
        env:
          CI: true
          RUN_INTEGRATION: true

  # NEW: Security scanning job
  security-scan:
    name: Security Scan
    runs-on: ubuntu-latest
    permissions:
      contents: read
      security-events: write  # For uploading SARIF results
    
    steps:
      - uses: actions/checkout@v4
      
      - uses: actions/setup-node@v4
        with:
          node-version: 'lts/Hydrogen'
          cache: 'npm'
      
      - name: Install dependencies
        run: npm ci
      
      # Scan for known vulnerabilities
      - name: Run npm audit
        run: |
          npm audit --json > audit-results.json || true
          cat audit-results.json
      
      # NEW: Generate SBOM for security analysis
      - name: Generate SBOM
        run: |
          npm install -g @cyclonedx/cyclonedx-npm
          cyclonedx-npm --output-file sbom.json
      
      - name: Upload SBOM as artifact
        uses: actions/upload-artifact@v4
        with:
          name: sbom-${{ github.sha }}
          path: sbom.json
      
      # NEW: Check for license compliance
      - name: License check
        run: |
          npx license-checker --summary || true

  # NEW: Dependency review (for PRs)
  dependency-review:
    name: Dependency Review
    runs-on: ubuntu-latest
    if: github.event_name == 'pull_request'
    permissions:
      contents: read
      pull-requests: write
    
    steps:
      - uses: actions/checkout@v4
      
      - name: Dependency Review
        uses: actions/dependency-review-action@v3
        with:
          fail-on-severity: moderate
          comment-summary-in-pr: true

  # Existing integration tests (unchanged)
  integration-tests-testnet:
    runs-on: ubuntu-latest
    continue-on-error: true
    strategy:
      matrix:
        include:
          - testnet: seoulnet
            testnet_uppercase: SEOULNET
            rpc_url: https://rpc.seoulnet.teztnets.com/
    steps:
      - uses: actions/checkout@v4
      
      - uses: actions/setup-node@v4
        with:
          node-version: lts/Hydrogen
          cache: 'npm'
      
      - run: npm ci
      - run: npm run build
      
      - if: ${{ !github.event.pull_request.head.repo.fork }}
        name: Tailscale
        uses: tailscale/github-action@v1
        with:
          authkey: ${{ secrets.TAILSCALE_AUTHKEY }}
          version: 1.32.2
      
      - id: run-tests
        run: npm -w integration-tests run test:${{ matrix.testnet }} -- --maxWorkers=4
        env:
          TEZOS_RPC_${{ matrix.testnet_uppercase }}: ${{ github.event.pull_request.head.repo.fork && matrix.rpc_url || null }}

  # NEW: SLSA level check (informational)
  slsa-check:
    name: Check SLSA Level
    runs-on: ubuntu-latest
    if: github.event_name == 'pull_request'
    
    steps:
      - uses: actions/checkout@v4
      
      - name: Check current SLSA compliance
        run: |
          echo "ðŸ“Š Current SLSA Status:"
          echo "- Build Level: Will be 3 once release workflow is merged"
          echo "- Source Level: 1 (Version controlled)"
          echo "- Dependencies: âœ“ Pinned with package-lock.json"
          echo ""
          echo "ðŸŽ¯ After release workflow merge:"
          echo "- npm provenance enabled"
          echo "- SBOM generation enabled"
          echo "- Vulnerability scanning enabled"
          echo "- Artifact verification enabled"
