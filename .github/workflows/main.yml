name: Node.js CI

on: [push]
jobs:
  lint-and-test:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - uses: actions/setup-node@v1
      with:
        node-version: 10.x
    - uses: actions/cache@v1
      with:
        path: ~/.npm
        key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
        restore-keys: |
          ${{ runner.os }}-node-
    - run: npm ci
    - run: npm run lerna -- bootstrap
    - run: npm run build
    - run: npm run lint
    - run: npm run test -- --runInBand
    - uses: codecov/codecov-action@v1
      with:
        file: .coverage/*.json
      env:
        CI: true
        RUN_INTEGRATION: true
  integration-tests-carthagenet:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node: [10.x, 12.x]
    steps:
    - uses: actions/checkout@v2
    - uses: actions/setup-node@v1
      with:
        node-version: ${{ matrix.node }}
    - uses: actions/cache@v1
      with:
        path: ~/.npm
        key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
        restore-keys: |
          ${{ runner.os }}-node-
    - run: npm ci
    - run: npm run lerna -- bootstrap
    - run: npm run build
    - run: cd integration-tests && npm run test:carthagenet
      env:
        CI: true
  integration-tests-delphinet:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node: [10.x, 12.x]
    steps:
    - uses: actions/checkout@v2
    - uses: actions/setup-node@v1
      with:
        node-version: ${{ matrix.node }}
    - uses: actions/cache@v1
      with:
        path: ~/.npm
        key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
        restore-keys: |
          ${{ runner.os }}-node-
    - run: npm ci
    - run: npm run lerna -- bootstrap
    - run: npm run build
    - run: cd integration-tests && npm run test:delphinet
      env:
        CI: true
