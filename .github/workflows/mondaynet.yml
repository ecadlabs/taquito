name: Mondaynet Integration Tests

on:
  push:
    branches:
      - '**mondaynet**'
  schedule:
    - cron: '0 0 * * 2'
  # Allows to run this workflow manually from the Actions tab
  workflow_dispatch:

jobs:
  integration-tests-mondaynet:
    runs-on: ubuntu-latest
    steps:
    - name: Tailscale
      uses: tailscale/github-action@v1
      with:
        authkey: ${{ secrets.TAILSCALE_AUTHKEY }}
        version: 1.30.0

    - name: Configure SSH
      run: |
        mkdir -p ~/.ssh/
        echo "$SSH_KEY" > ~/.ssh/id.key
        chmod 600 ~/.ssh/id.key
        cat >>~/.ssh/config <<END
        Host mondaynet
          HostName $SSH_HOST
          User $SSH_USER
          IdentityFile ~/.ssh/id.key
          StrictHostKeyChecking no
        END
      env:
        SSH_USER: ${{ secrets.MONDAYNET_TORU_SSH_USER }}
        SSH_KEY: ${{ secrets.MONDAYNET_TORU_SSH_KEY }}
        SSH_HOST: ecad-mondaynet-archive

    - name: get required TORU contract addresses
      id: toru-addresses
      run: |
        echo '::echo::on'
        echo ::set-output name=tx-rollup-hash::$(ssh mondaynet "jq '.[] | select(.name==\"toru_node\") | .value' /srv/tezos/mondaynet_client/tx_rollups | tr -d \\\" ")
        echo ::set-output name=tx-rollup-withdraw-contract::$(ssh mondaynet "jq '.[] | select(.name==\"tx_rollup_withdraw_contract\") | .value' /srv/tezos/mondaynet_client/contracts | tr -d \\\" ")
        echo ::set-output name=tx-rollup-deposit-contract::$(ssh mondaynet "jq '.[] | select(.name==\"tx_rollup_deposit_contract\") | .value' /srv/tezos/mondaynet_client/contracts | tr -d \\\" ")
        echo '::echo::off'
  
    - uses: actions/checkout@v3
    - uses: actions/setup-node@v3
      with:
        node-version: '16.13.1'
    - run: npm ci
    - run: npm run build
    -
      id: originate-contracts-mondaynet
      working-directory: ./integration-tests
      env:
        MONDAYNET: true
      run: npm run test:originate-known-contracts
    -
      if: always()
      id: integration-tests-mondaynet
      working-directory: ./integration-tests
      env:
        TEZOS_MONDAYNET_CONTRACT_ADDRESS: ${{ steps.originate-contracts-mondaynet.outputs.knownContractAddress }}
        TEZOS_MONDAYNET_BIGMAPCONTRACT_ADDRESS: ${{ steps.originate-contracts-mondaynet.outputs.knownBigMapContractAddress }}
        TEZOS_MONDAYNET_TZIP1216CONTRACT_ADDRESS: ${{ steps.originate-contracts-mondaynet.outputs.knownTzip12BigMapOffChainContractAddress }}
        TEZOS_MONDAYNET_SAPLINGCONTRACT_ADDRESS: ${{ steps.originate-contracts-mondaynet.outputs.knownSaplingContractAddress }}
        TEZOS_MONDAYNET_ON_CHAIN_VIEW_CONTRACT: ${{ steps.originate-contracts-mondaynet.outputs.knownOnChainViewContractAddress }}
        TX_ROLLUP_WITHDRAW_CONTRACT: ${{ steps.toru-addresses.outputs.tx-rollup-withdraw-contract }}
        TX_ROLLUP_DEPOSIT_CONTRACT: ${{ steps.toru-addresses.outputs.tx-rollup-deposit-contract }}
        TX_ROLLUP_TICKETS_OWNER_SECRET: ${{ secrets.TX_ROLLUP_TICKETS_OWNER_SECRET }}
      run: npm run test:mondaynet -- --maxWorkers=2
