{ parameter unit ;
  storage (option address) ;
  code { SENDER ; SELF ; ADDRESS ;
         IFCMPEQ
           { CDR ; ASSERT_SOME ;
             DIP { NIL operation } ;
             DUP ; CONTRACT %add unit ; ASSERT_NONE ;
             DUP ; CONTRACT %fact nat ; ASSERT_NONE ;
             DUP ; CONTRACT %add nat ; ASSERT_SOME ; PUSH mutez 0 ; PUSH nat 12 ; TRANSFER_TOKENS ; SWAP ; DIP { CONS } ;
             DUP ; CONTRACT unit ; ASSERT_SOME ; PUSH mutez 0 ; PUSH unit Unit ; TRANSFER_TOKENS ; SWAP ; DIP { CONS } ;
             DUP ; CONTRACT %sub nat ; ASSERT_SOME ; PUSH mutez 0 ; PUSH nat 3 ; TRANSFER_TOKENS ; SWAP ; DIP { CONS } ;
             DUP ; CONTRACT %add nat ; ASSERT_SOME ; PUSH mutez 0 ; PUSH nat 5 ; TRANSFER_TOKENS ; SWAP ; DIP { CONS } ;
             DROP ; DIP { NONE address } ; PAIR }
           { CAR ; DUP ;
             DIP
               { DIP { PUSH int 0 ; PUSH mutez 0 ; NONE key_hash } ;
                 DROP ;
                 CREATE_CONTRACT
                   { parameter (or (or (nat %add) (nat %sub)) (unit %default)) ;
                     storage int ;
                     code { AMOUNT ; PUSH mutez 0 ; ASSERT_CMPEQ ;
                            UNPAIR ;
                            IF_LEFT
                              { IF_LEFT { ADD } { SWAP ; SUB } }
                              { DROP ; DROP ; PUSH int 0 } ;
                            NIL operation ; PAIR } } } ;
             DIP { SELF ; PUSH mutez 0 } ; TRANSFER_TOKENS ;
             NIL operation ; SWAP ; CONS ; SWAP ; CONS ;
             DIP { SOME } ; PAIR } } }