parameter (pair int int);
storage (pair (option (pair int nat)) (pair (option (pair int nat)) (pair (option (pair int nat)) (option (pair nat nat)))));
code { CAR;
       # :: nat : nat : 'S   ->   option (pair nat nat) : 'S
       DUP; UNPAIR; ABS; DIP { ABS; }; EDIV; SWAP;
       # :: nat : int : 'S   ->   option (pair int nat) : 'S
       DUP; UNPAIR; ABS; EDIV; SWAP;
       # :: int : nat : 'S   ->   option (pair int nat) : 'S
       DUP; UNPAIR; DIP { ABS; }; EDIV; SWAP;
       # :: int : int : 'S   ->   option (pair int nat) : 'S
       UNPAIR; EDIV;
       PAPAPAIR;
       NIL operation; PAIR}
