/*

This contract is an example of using a cryptographic signature to
handle authentication. A public key is stored, and only the owner of
the secret key associated to this public key can interact with the
contract. She is allowed to perform any list of operations by sending
them wrapped in a lambda to the contract with a cryptographic
signature.

To ensure that each signature is used only once and is not replayed by
an attacker, not only the lambda is signed but also the unique
identifier of the contract (a pair of the contract address and the
chain id) and a counter that is incremented at each successful call.

More precisely, the signature should check against pack ((chain_id,
self) (param, counter)).

*/
parameter (pair (lambda unit (list operation)) signature);
storage (pair (nat %counter) key);
code
  {
    UNPPAIPAIR;
    DUUUP; DUUP ; SELF; CHAIN_ID ; PPAIPAIR; PACK;
    DIP { SWAP }; DUUUUUP ; DIP { SWAP };
    DUUUP; DIP {CHECK_SIGNATURE}; SWAP; IF {DROP} {FAILWITH};
    UNIT; EXEC;
    DIP { PUSH nat 1; ADD };
    PAPAIR
  }
