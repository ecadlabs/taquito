parameter (or (pair nat nat) (pair nat nat));
storage (option nat);
# this contract takes either (Left a b) and stores (a << b)
# or (Right a b) and stores (a >> b).
# i.e., in the first case, the first component shifted to the left by
# the second, and the second case, component shifted to the right by
# the second.
code { CAR;
       IF_LEFT {
                 UNPAIR; LSL;
               }
               {
                 UNPAIR; LSR;
               };
       SOME;
       NIL operation;
       PAIR;
     };
