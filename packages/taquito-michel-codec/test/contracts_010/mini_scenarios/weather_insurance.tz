parameter (pair (signature %signed_weather_data) (nat :rain %actual_level));
# (pair (under_key over_key) (pair weather_service_key (pair rain_level days_in_future)))
storage (pair (pair (address %under_key)
                    (address %over_key))
              (pair (nat :rain %rain_level) (key %weather_service_key)));
code { DUP; DUP;
       CAR; MAP_CDR{PACK ; BLAKE2B};
       SWAP; CDDDR %weather_service_key;
       DIP {UNPAIR} ; CHECK_SIGNATURE @sigok; # Check if the data has been correctly signed
       ASSERT; # If signature is not correct, end the execution
       DUP; DUP; DUP; DIIIP{CDR %storage}; # Place storage type on bottom of stack
       DIIP{CDAR};                # Place contracts below numbers
       DIP{CADR %actual_level};   # Get actual rain
       CDDAR %rain_level;         # Get rain threshold
       CMPLT; IF {CAR %under_key} {CDR %over_key};     # Select contract to receive tokens
       CONTRACT unit ; ASSERT_SOME ;
       BALANCE; UNIT ; TRANSFER_TOKENS @trans.op; # Setup and execute transfer
       NIL operation ; SWAP ; CONS ;
       PAIR };
